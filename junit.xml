<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="33" failures="0" errors="0" time="2.063">
  <testsuite name="DigestAuth test suite" errors="0" failures="0" skipped="0" timestamp="2023-02-25T06:48:08" time="1.682" tests="21">
    <testcase classname="DigestAuth test suite DigestAuth should return the correct username" name="DigestAuth test suite DigestAuth should return the correct username" time="0.004">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth should set the username correctly" name="DigestAuth test suite DigestAuth should set the username correctly" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth should return the correct password" name="DigestAuth test suite DigestAuth should return the correct password" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth should set the password correctly" name="DigestAuth test suite DigestAuth should set the password correctly" time="0.001">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth should return the correct URL" name="DigestAuth test suite DigestAuth should return the correct URL" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth should set the URL correctly" name="DigestAuth test suite DigestAuth should set the URL correctly" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth should return the correct port" name="DigestAuth test suite DigestAuth should return the correct port" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth should set the port correctly" name="DigestAuth test suite DigestAuth should set the port correctly" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth should return a new DigestAuthHeaders object" name="DigestAuth test suite DigestAuth should return a new DigestAuthHeaders object" time="0.003">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth should set the DigestAuthHeaders object correctly" name="DigestAuth test suite DigestAuth should set the DigestAuthHeaders object correctly" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite parseAuthorizationHeader should return existing digestAuthHeaders when qop is not null" name="DigestAuth test suite parseAuthorizationHeader should return existing digestAuthHeaders when qop is not null" time="0.003">
    </testcase>
    <testcase classname="DigestAuth test suite parseAuthorizationHeader should parse Www-Authenticate header when qop is null" name="DigestAuth test suite parseAuthorizationHeader should parse Www-Authenticate header when qop is null" time="0.005">
    </testcase>
    <testcase classname="DigestAuth test suite parseAuthorizationHeader should return undefined when Www-Authenticate header is not present and qop is null" name="DigestAuth test suite parseAuthorizationHeader should return undefined when Www-Authenticate header is not present and qop is null" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth createMessage method should create the message string correctly when digestAuthHeaders are provided" name="DigestAuth test suite DigestAuth createMessage method should create the message string correctly when digestAuthHeaders are provided" time="0.003">
    </testcase>
    <testcase classname="DigestAuth test suite DigestAuth createMessage method should create the message string correctly when digestAuthHeaders are not provided" name="DigestAuth test suite DigestAuth createMessage method should create the message string correctly when digestAuthHeaders are not provided" time="0.001">
    </testcase>
    <testcase classname="DigestAuth test suite createAuthorizationString should return a string" name="DigestAuth test suite createAuthorizationString should return a string" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite createAuthorizationString should generate a valid authorization header string" name="DigestAuth test suite createAuthorizationString should generate a valid authorization header string" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite createDigestPassword should return a string" name="DigestAuth test suite createDigestPassword should return a string" time="0.001">
    </testcase>
    <testcase classname="DigestAuth test suite createDigestPassword should generate a valid digest password" name="DigestAuth test suite createDigestPassword should generate a valid digest password" time="0.001">
    </testcase>
    <testcase classname="DigestAuth test suite createDigestCredential should return a string" name="DigestAuth test suite createDigestCredential should return a string" time="0.002">
    </testcase>
    <testcase classname="DigestAuth test suite createDigestCredential should generate a valid digest credential" name="DigestAuth test suite createDigestCredential should generate a valid digest credential" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="common" errors="0" failures="0" skipped="0" timestamp="2023-02-25T06:48:10" time="0.173" tests="12">
    <testcase classname="common myParseNumbers should return the value as is for ElementName or InstanceID starting with 0" name="common myParseNumbers should return the value as is for ElementName or InstanceID starting with 0" time="0.002">
    </testcase>
    <testcase classname="common myParseNumbers should call xml2js.parseNumbers for other cases" name="common myParseNumbers should call xml2js.parseNumbers for other cases" time="0.002">
    </testcase>
    <testcase classname="common parseBody should return an empty string if message body is empty" name="common parseBody should return an empty string if message body is empty" time="0.001">
    </testcase>
    <testcase classname="common parseBody should parse the message body correctly" name="common parseBody should parse the message body correctly" time="0.001">
    </testcase>
    <testcase classname="common parseBody should return an empty string if the message body is invalid" name="common parseBody should return an empty string if the message body is invalid" time="0.001">
    </testcase>
    <testcase classname="common parseXML should return null if the XML is invalid" name="common parseXML should return null if the XML is invalid" time="0.003">
    </testcase>
    <testcase classname="common Logger should log an error message" name="common Logger should log an error message" time="0.005">
    </testcase>
    <testcase classname="common Logger should log a debug message if the log level is DEBUG" name="common Logger should log a debug message if the log level is DEBUG" time="0.002">
    </testcase>
    <testcase classname="common Logger should not log a debug message if the log level is not DEBUG" name="common Logger should not log a debug message if the log level is not DEBUG" time="0.001">
    </testcase>
    <testcase classname="common Logger should log an info message" name="common Logger should log an info message" time="0.001">
    </testcase>
    <testcase classname="common Logger should log a warning message" name="common Logger should log a warning message" time="0.001">
    </testcase>
    <testcase classname="common Logger should not log a message for an invalid log type" name="common Logger should not log a message for an invalid log type" time="0.002">
    </testcase>
  </testsuite>
</testsuites>